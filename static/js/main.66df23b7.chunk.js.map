{"version":3,"sources":["components/Heading.js","components/Form.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Heading","Col","lg","span","offset","sm","Form","inputText","setInputText","todos","setTodos","setFilterStatus","filterStatus","InputGroup","xs","FormControl","placeholder","aria-label","aria-describedby","value","onChange","e","target","onKeyPress","key","text","isCompleted","id","uuidv4","className","DropdownButton","as","Append","variant","title","onSelect","Dropdown","Item","eventKey","Todo","isCompletedHandler","isDeletedHandler","ListGroupItem","Alert","ToggleButton","type","checked","Button","onClick","TodoList","filteredTodos","ListGroup","map","todo","filter","App","useState","setFilteredTodos","useEffect","localStorage","getItem","setItem","JSON","stringify","localTodos","parse","Container","Row","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66df23b7.chunk.js","sourcesContent":["import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nfunction Heading() {\n  return (\n    <Col lg={{ span: 6, offset: 3 }} sm={{ span: 10, offset: 1 }}>\n      <h1>Simple Todo List</h1>\n    </Col>\n  );\n}\nexport default Heading;\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n//importing bootstrap components\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Col from \"react-bootstrap/Col\";\n\nfunction Form({\n  inputText,\n  setInputText,\n  todos,\n  setTodos,\n  setFilterStatus,\n  filterStatus,\n}) {\n  const inputTextHandler = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\" && inputText !== \"\") {\n      setTodos([\n        ...todos,\n        { text: inputText, isCompleted: false, id: uuidv4() },\n      ]);\n      setInputText(\"\");\n    }\n  };\n\n  const filterStatusHandler = (e) => {\n    setFilterStatus(e);\n  };\n\n  return (\n    <InputGroup>\n      <Col lg={10} xs={12}>\n        <FormControl\n          placeholder=\"Enter some task...\"\n          aria-label=\"Enter some task...\"\n          aria-describedby=\"basic-addon2\"\n          value={inputText}\n          onChange={inputTextHandler}\n          onKeyPress={handleKeyPress}\n          className=\"formInput\"\n        />\n      </Col>\n      <Col lg={{ span: 2, offset: 0 }} xs={{ span: 6, offset: 3 }}>\n        <DropdownButton\n          as={InputGroup.Append}\n          variant=\"info\"\n          title={filterStatus}\n          id=\"input-group-dropdown-2\"\n          onSelect={filterStatusHandler}\n          className=\"formDropdown\"\n        >\n          <Dropdown.Item eventKey=\"All\">\n            <span>All</span>\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"Completed\">\n            <span>Completed</span>\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"Uncompleted\">\n            <span>Uncompleted</span>\n          </Dropdown.Item>\n        </DropdownButton>\n      </Col>\n    </InputGroup>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\n//importing bootstrap components\nimport Button from \"react-bootstrap/Button\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Col from \"react-bootstrap/Col\";\nimport { ListGroupItem } from \"react-bootstrap\";\nimport { Trash } from \"react-bootstrap-icons\";\n\nfunction Todo({ text, isCompleted, isCompletedHandler, isDeletedHandler }) {\n  return (\n    <ListGroupItem>\n      <Col lg={10} xs={12}>\n        <Alert\n          variant=\"dark\"\n          className={`todoItem ${isCompleted ? \"completed\" : \"\"}`}\n        >\n          {text}\n        </Alert>\n      </Col>\n      <Col\n        lg={{ span: 1, offset: 0 }}\n        xs={{ span: 3, offset: 3 }}\n        className=\"checkboxDiv\"\n      >\n        <ToggleButton\n          type=\"checkbox\"\n          variant=\"success\"\n          checked={isCompleted}\n          value=\"check\"\n          onChange={isCompletedHandler}\n          className=\"todoCheckbox\"\n        />\n      </Col>\n      <Col lg={{ span: 1, offset: 0 }} xs={{ span: 3, offset: 0 }}>\n        <Button\n          variant=\"danger\"\n          onClick={isDeletedHandler}\n          className=\"todoDelete\"\n        >\n          <Trash />\n        </Button>\n      </Col>\n    </ListGroupItem>\n  );\n}\n\nexport default Todo;\n","import React from \"react\";\nimport Todo from \"./Todo\";\n//importing bootstrap components\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nfunction TodoList({ todos, setTodos, filteredTodos }) {\n  const isCompletedHandler = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) {\n          return todo;\n        }\n        return {\n          ...todo,\n          isCompleted: !todo.isCompleted,\n        };\n      })\n    );\n  };\n\n  const isDeletedHandler = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  return (\n    <ListGroup>\n      {filteredTodos.map((todo) => (\n        <Todo\n          text={todo.text}\n          key={todo.id}\n          isCompleted={todo.isCompleted}\n          isCompletedHandler={() => isCompletedHandler(todo.id)}\n          isDeletedHandler={() => isDeletedHandler(todo.id)}\n        />\n      ))}\n    </ListGroup>\n  );\n}\n\nexport default TodoList;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Heading from \"./components/Heading\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n//importing bootstrap components\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [filterStatus, setFilterStatus] = useState(\"All\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let localTodos = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(localTodos);\n    }\n  }, []); //this useEffect runs only once because of empty array as dependancy\n\n  useEffect(() => {\n    switch (filterStatus) {\n      case \"Completed\":\n        setFilteredTodos(todos.filter((todo) => todo.isCompleted === true));\n        break;\n      case \"Uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.isCompleted === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n    }\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [filterStatus, todos]); //this useEffect runs once after render, and every time filterStatus or todos change\n\n  return (\n    <Container>\n      <Row className=\"headingContainer\">\n        <Heading />\n      </Row>\n      <Row className=\"formContainer\">\n        <Form\n          inputText={inputText}\n          setInputText={setInputText}\n          todos={todos}\n          setTodos={setTodos}\n          setFilterStatus={setFilterStatus}\n          filterStatus={filterStatus}\n        />\n      </Row>\n      {filteredTodos.length > 0 ? (\n        <Row className=\"todoListContainer\">\n          <TodoList\n            todos={todos}\n            setTodos={setTodos}\n            filteredTodos={filteredTodos}\n          />\n        </Row>\n      ) : (\n        <h4 className=\"noTodos\">\n          There are no todos for filter:{\" \"}\n          <span className=\"noTodosFilter\">{filterStatus}</span>\n        </h4>\n      )}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}